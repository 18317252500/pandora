(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{214:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("Process 在 procfile.js 中进行定义，依靠如下语法：")]),t._v(" "),t._m(2),t._v(" "),t._m(3),n("p",[t._v("上面的 "),n("code",[t._v("pandora.process('processName')")]),t._v(" 表示定义一个名字叫 "),n("code",[t._v("processName")]),t._v(" 进程，该语句会返回一个对象 "),n("a",{attrs:{href:"http://www.midwayjs.org/pandora/api-reference/pandora/classes/processrepresentationchainmodifier.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ProcessRepresentationChainModifier"),n("OutboundLink")],1),t._v("，我们可以通过该对象完善进程的定义。")]),t._v(" "),n("p",[t._v("下面通过一个简单的例子介绍：")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),n("p",[t._v("如果没有启动该进程的启动入口，该进程不会启动。")]),t._v(" "),n("p",[t._v("启动入口包括：")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),n("p",[t._v("如下图：")]),t._v(" "),t._m(10)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"自定义进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义进程","aria-hidden":"true"}},[this._v("#")]),this._v(" 自定义进程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"如何定义进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何定义进程","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何定义进程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("procfile.js")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("module"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pandora"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  pandora\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("process")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'processName'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("procfile.js")])])},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("module"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pandora"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \n  "),n("span",{attrs:{class:"token comment"}},[t._v("// 如果该进程定义存在则对其修改，否则就是新建")]),t._v("\n  pandora"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("process")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'processName'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 重命名进程")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 不传参数则获取")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("name")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'renameIt'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 标识进程的横向缩放的数量，默认 1 ，取值为数字或者 'auto'（自动为 CPU 数量）")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 不传参数则获取")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("scale")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("5")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 设置 Node.js 参数，全覆盖")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 进程内 process.execArgv 获取")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 如需增量请：.nodeArgs().push('--expose-gc')")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 不传参数则获取")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("nodeArgs")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token string"}},[t._v("'--expose-gc'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 设置进程参数")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 进程内 process.argv 获取")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 如需增量请：.nodeArgs().push('--a=b')")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 不传参数则获取")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("args")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token string"}},[t._v("'--a=b'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'--c=d'")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 该进程的环境变量，全覆盖")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 如需增量请：.env().x = 'y'")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 不传参数则获取")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("env")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token constant"}},[t._v("ENV_VAR")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'envValue'")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 进程启动顺序")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 不传参数则获取")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("order")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token number"}},[t._v("1")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 这个进程的入口文件")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 如果不设置，这个进程将不会启动（除非有 Service 被分配到了这个进程）")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// 不传参数则获取")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("entry")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v("'./app.js'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// Drop（删除）该进程定义")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("drop")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"没有程序入口进程不会启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#没有程序入口进程不会启动","aria-hidden":"true"}},[this._v("#")]),this._v(" 没有程序入口进程不会启动")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[s("code",[this._v(".entry()")]),this._v(" 的定义")]),this._v(" "),s("li",[this._v("有 Service 分配到这个进程")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"scale-与进程的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scale-与进程的关系","aria-hidden":"true"}},[this._v("#")]),this._v(" Scale 与进程的关系")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("如果一个进程定义的 Scale 大于 1 ，则使用 ScalableMater 进行启动，即 Master / Worker 模式。")]),this._v(" "),s("li",[this._v("如果一个进程定义的 Scale 为 1，直接启动。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://img.alicdn.com/tfs/TB1gpxPhgvD8KJjy0FlXXagBFXa-1794-890.png",alt:"img"}})])}],!1,null,null,null);e.options.__file="process_std.md";s.default=e.exports}}]);